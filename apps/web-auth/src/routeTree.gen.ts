/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

import { Route as rootRouteImport } from './routes/__root'
import { Route as authAuthAuthLayoutRouteImport } from './routes/(auth)/auth/_auth-layout'
import { Route as authAuthAuthLayoutRegisterRouteImport } from './routes/(auth)/auth/_auth-layout/register'
import { Route as authAuthAuthLayoutLoginRouteImport } from './routes/(auth)/auth/_auth-layout/login'

const authAuthRouteImport = createFileRoute('/(auth)/auth')()

const authAuthRoute = authAuthRouteImport.update({
  id: '/(auth)/auth',
  path: '/auth',
  getParentRoute: () => rootRouteImport,
} as any)
const authAuthAuthLayoutRoute = authAuthAuthLayoutRouteImport.update({
  id: '/_auth-layout',
  getParentRoute: () => authAuthRoute,
} as any)
const authAuthAuthLayoutRegisterRoute =
  authAuthAuthLayoutRegisterRouteImport.update({
    id: '/register',
    path: '/register',
    getParentRoute: () => authAuthAuthLayoutRoute,
  } as any)
const authAuthAuthLayoutLoginRoute = authAuthAuthLayoutLoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => authAuthAuthLayoutRoute,
} as any)

export interface FileRoutesByFullPath {
  '/auth': typeof authAuthAuthLayoutRouteWithChildren
  '/auth/login': typeof authAuthAuthLayoutLoginRoute
  '/auth/register': typeof authAuthAuthLayoutRegisterRoute
}
export interface FileRoutesByTo {
  '/auth': typeof authAuthAuthLayoutRouteWithChildren
  '/auth/login': typeof authAuthAuthLayoutLoginRoute
  '/auth/register': typeof authAuthAuthLayoutRegisterRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/(auth)/auth': typeof authAuthRouteWithChildren
  '/(auth)/auth/_auth-layout': typeof authAuthAuthLayoutRouteWithChildren
  '/(auth)/auth/_auth-layout/login': typeof authAuthAuthLayoutLoginRoute
  '/(auth)/auth/_auth-layout/register': typeof authAuthAuthLayoutRegisterRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/auth' | '/auth/login' | '/auth/register'
  fileRoutesByTo: FileRoutesByTo
  to: '/auth' | '/auth/login' | '/auth/register'
  id:
    | '__root__'
    | '/(auth)/auth'
    | '/(auth)/auth/_auth-layout'
    | '/(auth)/auth/_auth-layout/login'
    | '/(auth)/auth/_auth-layout/register'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  authAuthRoute: typeof authAuthRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/(auth)/auth': {
      id: '/(auth)/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof authAuthRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(auth)/auth/_auth-layout': {
      id: '/(auth)/auth/_auth-layout'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof authAuthAuthLayoutRouteImport
      parentRoute: typeof authAuthRoute
    }
    '/(auth)/auth/_auth-layout/register': {
      id: '/(auth)/auth/_auth-layout/register'
      path: '/register'
      fullPath: '/auth/register'
      preLoaderRoute: typeof authAuthAuthLayoutRegisterRouteImport
      parentRoute: typeof authAuthAuthLayoutRoute
    }
    '/(auth)/auth/_auth-layout/login': {
      id: '/(auth)/auth/_auth-layout/login'
      path: '/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof authAuthAuthLayoutLoginRouteImport
      parentRoute: typeof authAuthAuthLayoutRoute
    }
  }
}

interface authAuthAuthLayoutRouteChildren {
  authAuthAuthLayoutLoginRoute: typeof authAuthAuthLayoutLoginRoute
  authAuthAuthLayoutRegisterRoute: typeof authAuthAuthLayoutRegisterRoute
}

const authAuthAuthLayoutRouteChildren: authAuthAuthLayoutRouteChildren = {
  authAuthAuthLayoutLoginRoute: authAuthAuthLayoutLoginRoute,
  authAuthAuthLayoutRegisterRoute: authAuthAuthLayoutRegisterRoute,
}

const authAuthAuthLayoutRouteWithChildren =
  authAuthAuthLayoutRoute._addFileChildren(authAuthAuthLayoutRouteChildren)

interface authAuthRouteChildren {
  authAuthAuthLayoutRoute: typeof authAuthAuthLayoutRouteWithChildren
}

const authAuthRouteChildren: authAuthRouteChildren = {
  authAuthAuthLayoutRoute: authAuthAuthLayoutRouteWithChildren,
}

const authAuthRouteWithChildren = authAuthRoute._addFileChildren(
  authAuthRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  authAuthRoute: authAuthRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
